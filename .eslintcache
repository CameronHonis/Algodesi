[{"/Users/kevin/algoDesi/src/index.tsx":"1","/Users/kevin/algoDesi/src/App.tsx":"2","/Users/kevin/algoDesi/src/models/BST.tsx":"3","/Users/kevin/algoDesi/src/Window.tsx":"4","/Users/kevin/algoDesi/src/models/V2.tsx":"5","/Users/kevin/algoDesi/src/models/DS.tsx":"6","/Users/kevin/algoDesi/src/models/Node.tsx":"7","/Users/kevin/algoDesi/src/Helpers.ts":"8","/Users/kevin/algoDesi/src/components/SelectionBar.tsx":"9","/Users/kevin/algoDesi/src/components/ItemSelection.tsx":"10"},{"size":681,"mtime":1611101234258,"results":"11","hashOfConfig":"12"},{"size":1894,"mtime":1611108116333,"results":"13","hashOfConfig":"12"},{"size":10160,"mtime":1611108072547,"results":"14","hashOfConfig":"12"},{"size":4947,"mtime":1611108754474,"results":"15","hashOfConfig":"12"},{"size":6523,"mtime":1611101234260,"results":"16","hashOfConfig":"12"},{"size":526,"mtime":1611108084560,"results":"17","hashOfConfig":"12"},{"size":8302,"mtime":1611108098204,"results":"18","hashOfConfig":"12"},{"size":2125,"mtime":1611101234258,"results":"19","hashOfConfig":"12"},{"size":6447,"mtime":1611207945704,"results":"20","hashOfConfig":"12"},{"size":310,"mtime":1611201747925,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"4rpdta",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/kevin/algoDesi/src/index.tsx",[],["46","47"],"/Users/kevin/algoDesi/src/App.tsx",["48","49","50"],"import React, { useEffect } from \"react\";\nimport { BST } from \"./models/BST\";\n\nimport { DS } from \"./models/DS\";\nimport { V2 } from \"./models/V2\";\nimport { Window } from \"./Window\";\n\n\nexport interface Refs {\n  keysDown: Set<string>;\n}\n\nexport const initRefs: Refs = {\n  keysDown: new Set(),\n}\n\nexport interface State {\n  window: {\n    components: DS[];\n  }\n}\n\nexport const initState: State = {\n  window: {\n    components: []\n    //   new BST([1,2,3], new V2(0, 0)),\n    //   new BST([4,5,6], new V2(5,0))\n    // ]\n  },\n}\n\nexport interface AppContextType {\n  refs: Refs;\n  state: State;\n  setState: React.Dispatch<React.SetStateAction<State>>;\n}\n\nexport const AppContext = React.createContext<AppContextType>({refs: initRefs, state: initState, setState: () => {}});\n\nexport const App: React.FC = () => {\n  const refs = React.useRef<Refs>(initRefs);\n  const [ state, setState ] = React.useState<State>(initState);\n\n  const keysUpdated = () => {\n    if (refs.current.keysDown.has(\"q\") || refs.current.keysDown.has(\"Q\")) {\n      if (refs.current.keysDown.has(\"Shift\") || refs.current.keysDown.has(\"Ctrl\")) {\n        console.log(\"appState: \", state)\n        console.log(\"appRefs: \", refs.current)\n      }\n      refs.current.keysDown.delete(\"q\");\n      refs.current.keysDown.delete(\"Q\");\n      refs.current.keysDown.delete(\"Shift\");\n      refs.current.keysDown.delete(\"Ctrl\");\n      debugger;\n    }\n  }\n\n  const setKeyRefs = () => {\n\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", e => {\n      refs.current.keysDown.add(e.key);\n      keysUpdated();\n    })\n    document.addEventListener(\"keyup\", e => {\n      refs.current.keysDown.delete(e.key);\n      keysUpdated();\n    })\n  }, []); //eslint-disable-line\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={{refs: refs.current, state, setState}}>\n        <Window />\n      </AppContext.Provider>\n    </div>\n  );\n}","/Users/kevin/algoDesi/src/models/BST.tsx",[],"/Users/kevin/algoDesi/src/Window.tsx",[],"/Users/kevin/algoDesi/src/models/V2.tsx",[],"/Users/kevin/algoDesi/src/models/DS.tsx",[],["51","52"],"/Users/kevin/algoDesi/src/models/Node.tsx",[],"/Users/kevin/algoDesi/src/Helpers.ts",[],"/Users/kevin/algoDesi/src/components/SelectionBar.tsx",["53","54","55","56","57","58"],"/Users/kevin/algoDesi/src/components/ItemSelection.tsx",["59"],"import React, {useState, useEffect} from 'react'\n\ntype ItemSelectionProps = {\n  itemName: string,\n  className: string\n}\n\nconst ItemSelection: React.FC<ItemSelectionProps> = (props) => {\n  const { itemName, className } = props\n  const [classList, setClassList] = useState('itemSelection')\n\n  useEffect(() => {\n      setClassList('itemSelection itemSelectionLoaded')\n  }, [])\n  \n  return (\n    <div className={classList}>\n      <p>{itemName}</p>\n    </div>\n  )\n}\n\nexport default ItemSelection",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":12},{"ruleId":"64","severity":1,"message":"69","line":58,"column":9,"nodeType":"66","messageId":"67","endLine":58,"endColumn":19},{"ruleId":"60","replacedBy":"70"},{"ruleId":"62","replacedBy":"71"},{"ruleId":"64","severity":1,"message":"72","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"73","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"74","line":1,"column":38,"nodeType":"66","messageId":"67","endLine":1,"endColumn":44},{"ruleId":"64","severity":1,"message":"75","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":21},{"ruleId":"64","severity":1,"message":"76","line":228,"column":11,"nodeType":"66","messageId":"67","endLine":228,"endColumn":19},{"ruleId":"77","severity":1,"message":"78","line":251,"column":6,"nodeType":"79","endLine":251,"endColumn":8,"suggestions":"80"},{"ruleId":"64","severity":1,"message":"81","line":9,"column":21,"nodeType":"66","messageId":"67","endLine":9,"endColumn":30},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'BST' is defined but never used.","Identifier","unusedVar","'V2' is defined but never used.","'setKeyRefs' is assigned a value but never used.",["82"],["83"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ItemSelection' is defined but never used.","'size' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setBarRefs'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'className' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [setBarRefs]",{"range":"87","text":"88"},[5297,5299],"[setBarRefs]"]