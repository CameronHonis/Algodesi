[{"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\index.tsx":"1","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\App.tsx":"2","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\Window.tsx":"3","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\V2.tsx":"4","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\BST.tsx":"5","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DS.tsx":"6","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Node.tsx":"7","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\BSTComp.tsx":"8","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DSPhysics.tsx":"9","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\NodePhysics.tsx":"10","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\NodeComp.tsx":"11","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\M2.tsx":"12","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\EdgeComp.tsx":"13","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\SelectionBar.tsx":"14","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ItemSelection.tsx":"15","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Helpers.ts":"16","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ContextWindow.tsx":"17","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ContextWindowAction.tsx":"18"},{"size":733,"mtime":1611922802228,"results":"19","hashOfConfig":"20"},{"size":2160,"mtime":1612381520988,"results":"21","hashOfConfig":"20"},{"size":28812,"mtime":1612490256944,"results":"22","hashOfConfig":"20"},{"size":7158,"mtime":1612466843512,"results":"23","hashOfConfig":"20"},{"size":27949,"mtime":1612478137837,"results":"24","hashOfConfig":"20"},{"size":332,"mtime":1612476943105,"results":"25","hashOfConfig":"20"},{"size":9933,"mtime":1612478031169,"results":"26","hashOfConfig":"20"},{"size":1639,"mtime":1611751354033,"results":"27","hashOfConfig":"28"},{"size":453,"mtime":1611214987589,"results":"29","hashOfConfig":"28"},{"size":8332,"mtime":1612466828243,"results":"30","hashOfConfig":"20"},{"size":12757,"mtime":1612487496925,"results":"31","hashOfConfig":"20"},{"size":4234,"mtime":1612466824189,"results":"32","hashOfConfig":"20"},{"size":4694,"mtime":1612473225084,"results":"33","hashOfConfig":"20"},{"size":7119,"mtime":1611866390328,"results":"34","hashOfConfig":"35"},{"size":1397,"mtime":1611806975712,"results":"36","hashOfConfig":"35"},{"size":4808,"mtime":1612467416287,"results":"37","hashOfConfig":"20"},{"size":3079,"mtime":1612491048470,"results":"38","hashOfConfig":"20"},{"size":3741,"mtime":1612490000680,"results":"39","hashOfConfig":"20"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"sod99u",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xb19gd",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},"1rs0ro5",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\index.tsx",[],["79","80"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\App.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\Window.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\V2.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\BST.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DS.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Node.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\BSTComp.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DSPhysics.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\NodePhysics.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\NodeComp.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\M2.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\EdgeComp.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\SelectionBar.tsx",["81"],"import React from 'react'\r\nimport { V2 } from '../models/V2'\r\nimport ItemSelection from './ItemSelection'\r\n\r\nenum GroupSelect {\r\n  NONE,\r\n  LIST,\r\n  NODE,\r\n}\r\n\r\ntype GroupSelectKeys = keyof typeof GroupSelect\r\nexport interface MenuItem {\r\n  itemName: string\r\n  pos: V2\r\n  svg?: JSX.Element | null\r\n  category: GroupSelect\r\n}\r\n\r\nconst itemsByGroup: { [key in GroupSelectKeys]: MenuItem[] } = {\r\n  NONE:\r\n    [\r\n      {\r\n        itemName: 'Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE,\r\n      },\r\n      {\r\n        itemName: 'Array',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n      {\r\n        itemName: 'Pencil',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n      {\r\n        itemName: 'Eraser',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n      {\r\n        itemName: 'Input',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n    ],\r\n  LIST:\r\n    [\r\n      {\r\n        itemName: 'Array',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n      {\r\n        itemName: 'Stack',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n      {\r\n        itemName: 'Set',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n      {\r\n        itemName: 'Queue',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n    ],\r\n  NODE:\r\n    [\r\n      {\r\n        itemName: 'General Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Binary Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Binary Search Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Trie',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'AVL Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Red-black tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Splay Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Treap',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'B-tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Acyclic Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Cyclic Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Weighted Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Unweighted Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Undirected Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Directed Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Simple Linked List',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Doubly Linked List',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Circular Linked List',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n    ]\r\n}\r\nexport interface initBarRef {\r\n  size: V2;\r\n  targetSize: V2;\r\n  selected: GroupSelectKeys;\r\n  rendered: MenuItem[];\r\n  isTweeningBar: boolean;\r\n}\r\n\r\nexport const initBarState: initBarRef = {\r\n  size: new V2(50, 250),\r\n  targetSize: new V2(50, 250),\r\n  selected: 'NONE',\r\n  rendered: itemsByGroup['NONE'],\r\n  isTweeningBar: false,\r\n}\r\n\r\nexport enum BarRefsAction {\r\n  SET_BAR_SIZE,\r\n  SET_BAR_TARGET_SIZE\r\n}\r\n\r\n\r\nconst SelectionBar: React.FC = () => {\r\n  const barSizeRef = React.useRef<HTMLDivElement>(null);\r\n  const [rendered, setRendered] = React.useState(itemsByGroup.NONE)\r\n\r\n  const refs = React.useRef(initBarState);\r\n\r\n  const setBarRefs = (action: BarRefsAction, arg: any): any => {\r\n    if (action === BarRefsAction.SET_BAR_SIZE && arg && arg.size) {\r\n      refs.current.size = arg.size\r\n      renderBarSize()\r\n    } else if (action === BarRefsAction.SET_BAR_TARGET_SIZE && arg && arg.size) {\r\n      refs.current.targetSize = arg.size\r\n      initBarSizeTween()\r\n    }\r\n  }\r\n  // set bar size, get collection\r\n  const renderBarSize = (): void => {\r\n    const size: V2 = refs.current.size;\r\n    const collection = itemsByGroup[refs.current.selected];\r\n    if (barSizeRef.current) {\r\n      const barSize: V2 = new V2(size.x, size.y);\r\n      barSizeRef.current.style.width = barSize.x + \"px\";\r\n      barSizeRef.current.style.height = barSize.y + \"px\";\r\n    }\r\n    refs.current.rendered = collection\r\n    setRendered(collection)\r\n  }\r\n\r\n  const initBarSizeTween = (): void => {\r\n    const barSizeTween = (): void => {\r\n      refs.current.isTweeningBar = true\r\n      const [newSize, sizeMet] = refs.current.size.tween(refs.current.targetSize, .15, .001 * refs.current.targetSize.x);\r\n      setTimeout(() => {\r\n        setBarRefs(BarRefsAction.SET_BAR_SIZE, { size: newSize });\r\n        if (sizeMet) { refs.current.isTweeningBar = false; return; }\r\n        barSizeTween();\r\n      }, 10);\r\n    }\r\n    if (!refs.current.isTweeningBar) {\r\n      barSizeTween();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setBarRefs(BarRefsAction.SET_BAR_SIZE, { size: refs.current.size });\r\n  }, [])\r\n\r\n  const clickHandler = (e: any) => {\r\n        refs.current.selected = 'NONE'\r\n        const collection = itemsByGroup[refs.current.selected];\r\n        const newX = 50\r\n        const newY = collection.length * 50\r\n        setBarRefs(BarRefsAction.SET_BAR_TARGET_SIZE, { size: new V2(newX, newY) });\r\n    }\r\n\r\n  return (\r\n    <div className='itemMenu' ref={barSizeRef}>\r\n      {\r\n        refs.current.selected !== \"NONE\" ?\r\n          <div id='selectNone' onClick={e => {clickHandler(e)}}>\r\n            <p>X - close this b</p>\r\n          </div>\r\n          : null\r\n      }\r\n      {\r\n        rendered.map(item => {\r\n          return <ItemSelection key={item.itemName} itemName={item.itemName} setBarRefs={setBarRefs} itemsByGroup={itemsByGroup} refs={refs} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default SelectionBar\r\n",["82","83"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ItemSelection.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Helpers.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ContextWindow.tsx",["84"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ContextWindowAction.tsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":259,"column":6,"nodeType":"91","endLine":259,"endColumn":8,"suggestions":"92"},{"ruleId":"85","replacedBy":"93"},{"ruleId":"87","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":12},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setBarRefs'. Either include it or remove the dependency array.","ArrayExpression",["101"],["99"],["100"],"@typescript-eslint/no-unused-vars","'gsap' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [setBarRefs]",{"range":"104","text":"105"},[6282,6284],"[setBarRefs]"]