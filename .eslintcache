[{"/Users/kevin/algoDesi/src/index.tsx":"1","/Users/kevin/algoDesi/src/App.tsx":"2","/Users/kevin/algoDesi/src/models/BST.tsx":"3","/Users/kevin/algoDesi/src/Window.tsx":"4","/Users/kevin/algoDesi/src/models/V2.tsx":"5","/Users/kevin/algoDesi/src/models/DS.tsx":"6","/Users/kevin/algoDesi/src/models/Node.tsx":"7","/Users/kevin/algoDesi/src/Helpers.ts":"8","/Users/kevin/algoDesi/src/components/SelectionBar.tsx":"9","/Users/kevin/algoDesi/src/components/ItemSelection.tsx":"10","/Users/kevin/algoDesi/src/models/NodePhysics.tsx":"11","/Users/kevin/algoDesi/src/models/M2.tsx":"12","/Users/kevin/algoDesi/src/components/EdgeComp.tsx":"13","/Users/kevin/algoDesi/src/components/NodeComp.tsx":"14"},{"size":734,"mtime":1611806720657,"results":"15","hashOfConfig":"16"},{"size":1849,"mtime":1611806720654,"results":"17","hashOfConfig":"16"},{"size":26973,"mtime":1611806720658,"results":"18","hashOfConfig":"16"},{"size":16897,"mtime":1611806816529,"results":"19","hashOfConfig":"16"},{"size":6493,"mtime":1611806720660,"results":"20","hashOfConfig":"16"},{"size":165,"mtime":1611806720658,"results":"21","hashOfConfig":"16"},{"size":8871,"mtime":1611806720659,"results":"22","hashOfConfig":"16"},{"size":4011,"mtime":1611806720655,"results":"23","hashOfConfig":"16"},{"size":6811,"mtime":1611805287627,"results":"24","hashOfConfig":"16"},{"size":1354,"mtime":1611804790832,"results":"25","hashOfConfig":"16"},{"size":4793,"mtime":1611806720659,"results":"26","hashOfConfig":"16"},{"size":4135,"mtime":1611806720659,"results":"27","hashOfConfig":"16"},{"size":875,"mtime":1611806720657,"results":"28","hashOfConfig":"16"},{"size":1694,"mtime":1611806720657,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4rpdta",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/kevin/algoDesi/src/index.tsx",[],"/Users/kevin/algoDesi/src/App.tsx",["60","61","62"],"import React, { useEffect } from \"react\";\nimport { BST } from \"./models/BST\";\n\nimport { DS } from \"./models/DS\";\nimport { V2 } from \"./models/V2\";\nimport { Window } from \"./Window\";\n\n\nexport interface Refs {\n  keysDown: Set<string>;\n}\n\nexport const initRefs: Refs = {\n  keysDown: new Set(),\n}\n\nexport interface State {\n  window: {\n    components: DS[];\n  }\n}\n\nexport const initState: State = {\n  window: {\n    components: []\n    //   new BST([1,2,3], new V2(0, 0)),\n    //   new BST([4,5,6], new V2(5,0))\n    // ]\n  },\n}\n\nexport interface AppContextType {\n  refs: Refs;\n  state: State;\n  setState: React.Dispatch<React.SetStateAction<State>>;\n}\n\nexport const AppContext = React.createContext<AppContextType>({refs: initRefs, state: initState, setState: () => {}});\n\nexport const App: React.FC = () => {\n  const refs = React.useRef<Refs>(initRefs);\n  const [ state, setState ] = React.useState<State>(initState);\n\n  const keysUpdated = () => {\n    if (refs.current.keysDown.has(\"q\") || refs.current.keysDown.has(\"Q\")) {\n      if (refs.current.keysDown.has(\"Shift\") || refs.current.keysDown.has(\"Ctrl\")) {\n        console.log(\"appState: \", state)\n        console.log(\"appRefs: \", refs.current)\n      }\n      refs.current.keysDown.delete(\"q\");\n      refs.current.keysDown.delete(\"Q\");\n      refs.current.keysDown.delete(\"Shift\");\n      refs.current.keysDown.delete(\"Ctrl\");\n      debugger;\n    }\n  }\n\n  const setKeyRefs = () => {\n\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", e => {\n      refs.current.keysDown.add(e.key);\n      keysUpdated();\n    })\n    document.addEventListener(\"keyup\", e => {\n      refs.current.keysDown.delete(e.key);\n      keysUpdated();\n    })\n  }, []); //eslint-disable-line\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={{refs: refs.current, state, setState}}>\n        <Window />\n      </AppContext.Provider>\n    </div>\n  );\n}",["63","64"],"/Users/kevin/algoDesi/src/models/BST.tsx",[],"/Users/kevin/algoDesi/src/Window.tsx",["65","66"],"/Users/kevin/algoDesi/src/models/V2.tsx",[],"/Users/kevin/algoDesi/src/models/DS.tsx",[],"/Users/kevin/algoDesi/src/models/Node.tsx",[],"/Users/kevin/algoDesi/src/Helpers.ts",["67"],"/Users/kevin/algoDesi/src/components/SelectionBar.tsx",["68"],"/Users/kevin/algoDesi/src/components/ItemSelection.tsx",[],"/Users/kevin/algoDesi/src/models/NodePhysics.tsx",[],"/Users/kevin/algoDesi/src/models/M2.tsx",[],"/Users/kevin/algoDesi/src/components/EdgeComp.tsx",[],"/Users/kevin/algoDesi/src/components/NodeComp.tsx",[],{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"74","line":58,"column":9,"nodeType":"71","messageId":"72","endLine":58,"endColumn":19},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"69","severity":1,"message":"79","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},{"ruleId":"69","severity":1,"message":"80","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"81","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":259,"column":6,"nodeType":"84","endLine":259,"endColumn":8,"suggestions":"85"},"@typescript-eslint/no-unused-vars","'BST' is defined but never used.","Identifier","unusedVar","'V2' is defined but never used.","'setKeyRefs' is assigned a value but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'BSTComp' is defined but never used.","'DS' is defined but never used.","'RefsAction' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setBarRefs'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [setBarRefs]",{"range":"91","text":"92"},[6024,6026],"[setBarRefs]"]