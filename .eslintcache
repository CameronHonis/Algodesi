[{"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\index.tsx":"1","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\App.tsx":"2","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\Window.tsx":"3","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\BSTComp.tsx":"4","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\NodeComp.tsx":"5","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\EdgeComp.tsx":"6","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\SelectionBar.tsx":"7","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ItemSelection.tsx":"8","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Helpers.ts":"9","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\MainContext.tsx":"10","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\MainContextItem.tsx":"11","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\EditNode.tsx":"12","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\V2.ts":"13","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\BST.ts":"14","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DS.ts":"15","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Node.ts":"16","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\NodePhysics.ts":"17","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\M2.ts":"18","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DSPhysics.ts":"19","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\M3.ts":"20","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Tri.ts":"21","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\services\\physics.ts":"22","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\services\\render.ts":"23","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\services\\UITree.ts":"24","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\envVars.ts":"25","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\svgs\\Checkbox.tsx":"26","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\AddNode.tsx":"27","C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\svgs\\DropInto.tsx":"28"},{"size":733,"mtime":1611922802228,"results":"29","hashOfConfig":"30"},{"size":5823,"mtime":1613713101714,"results":"31","hashOfConfig":"30"},{"size":32142,"mtime":1613895885246,"results":"32","hashOfConfig":"30"},{"size":3277,"mtime":1613894202025,"results":"33","hashOfConfig":"30"},{"size":10976,"mtime":1613890465761,"results":"34","hashOfConfig":"30"},{"size":672,"mtime":1613459406201,"results":"35","hashOfConfig":"30"},{"size":7119,"mtime":1611866390328,"results":"36","hashOfConfig":"37"},{"size":1397,"mtime":1611806975712,"results":"38","hashOfConfig":"37"},{"size":5683,"mtime":1613894626085,"results":"39","hashOfConfig":"30"},{"size":4488,"mtime":1613894006552,"results":"40","hashOfConfig":"30"},{"size":3962,"mtime":1613894267904,"results":"41","hashOfConfig":"30"},{"size":4510,"mtime":1613893938753,"results":"42","hashOfConfig":"30"},{"size":6825,"mtime":1613364392082,"results":"43","hashOfConfig":"30"},{"size":19359,"mtime":1613895549738,"results":"44","hashOfConfig":"30"},{"size":326,"mtime":1613001770730,"results":"45","hashOfConfig":"30"},{"size":9757,"mtime":1613627610022,"results":"46","hashOfConfig":"30"},{"size":7914,"mtime":1613634131657,"results":"47","hashOfConfig":"30"},{"size":4385,"mtime":1613253217038,"results":"48","hashOfConfig":"30"},{"size":11906,"mtime":1613894180903,"results":"49","hashOfConfig":"30"},{"size":3022,"mtime":1613104056509,"results":"50","hashOfConfig":"30"},{"size":2036,"mtime":1613706873615,"results":"51","hashOfConfig":"30"},{"size":4021,"mtime":1613720374612,"results":"52","hashOfConfig":"30"},{"size":21591,"mtime":1613895104648,"results":"53","hashOfConfig":"30"},{"size":6295,"mtime":1613893589296,"results":"54","hashOfConfig":"30"},{"size":2437,"mtime":1613892432672,"results":"55","hashOfConfig":"30"},{"size":1298,"mtime":1613538013143,"results":"56","hashOfConfig":"30"},{"size":5696,"mtime":1613893835021,"results":"57","hashOfConfig":"30"},{"size":1548,"mtime":1613810737366,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"sod99u",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"1rs0ro5",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\index.tsx",[],["118","119"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\App.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\Window.tsx",["120","121"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\BSTComp.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\NodeComp.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\EdgeComp.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\SelectionBar.tsx",["122"],"import React from 'react'\r\nimport { V2 } from '../models/V2'\r\nimport ItemSelection from './ItemSelection'\r\n\r\nenum GroupSelect {\r\n  NONE,\r\n  LIST,\r\n  NODE,\r\n}\r\n\r\ntype GroupSelectKeys = keyof typeof GroupSelect\r\nexport interface MenuItem {\r\n  itemName: string\r\n  pos: V2\r\n  svg?: JSX.Element | null\r\n  category: GroupSelect\r\n}\r\n\r\nconst itemsByGroup: { [key in GroupSelectKeys]: MenuItem[] } = {\r\n  NONE:\r\n    [\r\n      {\r\n        itemName: 'Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE,\r\n      },\r\n      {\r\n        itemName: 'Array',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n      {\r\n        itemName: 'Pencil',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n      {\r\n        itemName: 'Eraser',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n      {\r\n        itemName: 'Input',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NONE\r\n      },\r\n    ],\r\n  LIST:\r\n    [\r\n      {\r\n        itemName: 'Array',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n      {\r\n        itemName: 'Stack',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n      {\r\n        itemName: 'Set',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n      {\r\n        itemName: 'Queue',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.LIST\r\n      },\r\n    ],\r\n  NODE:\r\n    [\r\n      {\r\n        itemName: 'General Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Binary Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Binary Search Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Trie',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'AVL Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Red-black tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Splay Tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Treap',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'B-tree',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Acyclic Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Cyclic Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Weighted Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Unweighted Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Undirected Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Directed Graph',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Simple Linked List',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Doubly Linked List',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n      {\r\n        itemName: 'Circular Linked List',\r\n        pos: new V2(50, 50),\r\n        svg: null,\r\n        category: GroupSelect.NODE\r\n      },\r\n    ]\r\n}\r\nexport interface initBarRef {\r\n  size: V2;\r\n  targetSize: V2;\r\n  selected: GroupSelectKeys;\r\n  rendered: MenuItem[];\r\n  isTweeningBar: boolean;\r\n}\r\n\r\nexport const initBarState: initBarRef = {\r\n  size: new V2(50, 250),\r\n  targetSize: new V2(50, 250),\r\n  selected: 'NONE',\r\n  rendered: itemsByGroup['NONE'],\r\n  isTweeningBar: false,\r\n}\r\n\r\nexport enum BarRefsAction {\r\n  SET_BAR_SIZE,\r\n  SET_BAR_TARGET_SIZE\r\n}\r\n\r\n\r\nconst SelectionBar: React.FC = () => {\r\n  const barSizeRef = React.useRef<HTMLDivElement>(null);\r\n  const [rendered, setRendered] = React.useState(itemsByGroup.NONE)\r\n\r\n  const refs = React.useRef(initBarState);\r\n\r\n  const setBarRefs = (action: BarRefsAction, arg: any): any => {\r\n    if (action === BarRefsAction.SET_BAR_SIZE && arg && arg.size) {\r\n      refs.current.size = arg.size\r\n      renderBarSize()\r\n    } else if (action === BarRefsAction.SET_BAR_TARGET_SIZE && arg && arg.size) {\r\n      refs.current.targetSize = arg.size\r\n      initBarSizeTween()\r\n    }\r\n  }\r\n  // set bar size, get collection\r\n  const renderBarSize = (): void => {\r\n    const size: V2 = refs.current.size;\r\n    const collection = itemsByGroup[refs.current.selected];\r\n    if (barSizeRef.current) {\r\n      const barSize: V2 = new V2(size.x, size.y);\r\n      barSizeRef.current.style.width = barSize.x + \"px\";\r\n      barSizeRef.current.style.height = barSize.y + \"px\";\r\n    }\r\n    refs.current.rendered = collection\r\n    setRendered(collection)\r\n  }\r\n\r\n  const initBarSizeTween = (): void => {\r\n    const barSizeTween = (): void => {\r\n      refs.current.isTweeningBar = true\r\n      const [newSize, sizeMet] = refs.current.size.tween(refs.current.targetSize, .15, .001 * refs.current.targetSize.x);\r\n      setTimeout(() => {\r\n        setBarRefs(BarRefsAction.SET_BAR_SIZE, { size: newSize });\r\n        if (sizeMet) { refs.current.isTweeningBar = false; return; }\r\n        barSizeTween();\r\n      }, 10);\r\n    }\r\n    if (!refs.current.isTweeningBar) {\r\n      barSizeTween();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setBarRefs(BarRefsAction.SET_BAR_SIZE, { size: refs.current.size });\r\n  }, [])\r\n\r\n  const clickHandler = (e: any) => {\r\n        refs.current.selected = 'NONE'\r\n        const collection = itemsByGroup[refs.current.selected];\r\n        const newX = 50\r\n        const newY = collection.length * 50\r\n        setBarRefs(BarRefsAction.SET_BAR_TARGET_SIZE, { size: new V2(newX, newY) });\r\n    }\r\n\r\n  return (\r\n    <div className='itemMenu' ref={barSizeRef}>\r\n      {\r\n        refs.current.selected !== \"NONE\" ?\r\n          <div id='selectNone' onClick={e => {clickHandler(e)}}>\r\n            <p>X - close this b</p>\r\n          </div>\r\n          : null\r\n      }\r\n      {\r\n        rendered.map(item => {\r\n          return <ItemSelection key={item.itemName} itemName={item.itemName} setBarRefs={setBarRefs} itemsByGroup={itemsByGroup} refs={refs} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default SelectionBar\r\n",["123","124"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\ItemSelection.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Helpers.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\MainContext.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\MainContextItem.tsx",["125"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\EditNode.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\V2.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\BST.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DS.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Node.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\NodePhysics.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\M2.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\DSPhysics.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\M3.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\models\\Tri.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\services\\physics.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\services\\render.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\services\\UITree.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\envVars.ts",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\svgs\\Checkbox.tsx",[],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\components\\AddNode.tsx",["126","127"],"C:\\Users\\camer\\Documents\\Websites\\algo-designer\\src\\svgs\\DropInto.tsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":11,"column":18,"nodeType":"134","messageId":"135","endLine":11,"endColumn":37},{"ruleId":"132","severity":1,"message":"136","line":11,"column":53,"nodeType":"134","messageId":"135","endLine":11,"endColumn":78},{"ruleId":"137","severity":1,"message":"138","line":259,"column":6,"nodeType":"139","endLine":259,"endColumn":8,"suggestions":"140"},{"ruleId":"128","replacedBy":"141"},{"ruleId":"130","replacedBy":"142"},{"ruleId":"132","severity":1,"message":"143","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"144","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":21},{"ruleId":"132","severity":1,"message":"145","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":12},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'MainContextItemRefs' is defined but never used.","Identifier","unusedVar","'MainContextItemRefsAction' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setBarRefs'. Either include it or remove the dependency array.","ArrayExpression",["148"],["146"],["147"],"'gsap' is defined but never used.","'NodePhysics' is defined but never used.","'V2' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [setBarRefs]",{"range":"151","text":"152"},[6282,6284],"[setBarRefs]"]